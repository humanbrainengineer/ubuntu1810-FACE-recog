支持 exfat格式：
sudo apt-get install exfat-fuse exfat-utils



----------------------------------------------------

检查这个和Ubuntun 18.04上的gcc版本，我们决定降低我们的gcc版本。
gcc --version   # check ubuntu 18.04 gcc version, you will find it's 7.3.0
sudo apt install gcc-5 g++-5
sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 50   # you will find that message that tells you the gcc-5 is set to be automatic.
sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 50   # similiar message as gcc

-------------------------------------------------




1-step：------------- ----------------- ----------------

2.安装驱动装备工作

 ubuntu自带的nouveau驱动会影响cuda安装，不当操作会导致黑屏和登陆循环。终端运行

lsmod | grep nouveau

若有输出，则

cd /etc/modprobe.d

sudo touch blacklist-nouveau.conf

sudo gedit blacklist-nouveau.conf

sudo nano blacklist-nouveau.conf

 

在打开的文件中输入

 

blacklist nouveau  
options nouveau modeset=0 

 

保存退出，然后

 

sudo update-initramfs -u

 ！@@@@@@@@@@@@@@@@@@@@@在这里，已经可以做  sudo systemctl set-default multi-user.target  这一步

一定要重启，再用终端检测一下

此时重启后，解析度已经降低。

sudo lsmod | grep nouveau

 

没有输出，恭喜你，可以进入下一步

---------------------

2-step：------------- ----------------- ----------------

卸载掉原有驱动

sudo apt-get remove --purge nvidia-*

 

 这一句在 ubuntu1804已经无效：CTRL + ALT + F1进入字符界面，关闭图形界面，一定要这么做，所以在驱动安装完成前，建议把以下几步记下来
=====

1. 关闭用户图形界面

sudo systemctl set-default multi-user.target
sudo reboot



2. 开启用户图形界面

sudo systemctl set-default graphical.target
sudo reboot

=====
 

sudo service lightdm stop

 

安装nvidia驱动，其中 -no-opengl-files 是必须的，其他两个可以不用敲

 

sudo chmod a+x NVIDIA-Linux-x86_64-396.18.run //获取权限
sudo ./NVIDIA-Linux-x86_64-396.18.run –no-x-check –no-nouveau-check –no-opengl-files //安装驱动

-------------------------------------
测试：
按Enter键，直到完成。重启，登录，命令行输入
nvidia-smi


显卡驱动到此，安装完毕。
-------------------------------------



3.  安装cuda-9.0


---------------------

本文来自 代码湾 的CSDN 博客 ，全文地址请点击：https://blog.csdn.net/B9Q8e64lO6mm/article/details/81117285?utm_source=copy 

安装CUDA9.0

进入下载的文件路径
sudo chmod a+x cuda_9.2.88_396.26_linux
sudo sh cuda_9.2.88_396.26_linux   or ./cuda.......
出现说明之后，按Ctrl + C键跳过，接受之后会问你是否需要安装驱动，选择无，其余选择是直至安装完成。


补丁1~补丁4

chmod 777 -R /usr/local/cuda-9.0/
sudo chmod a+x patch1
./cuda_9.2.88_396.26_linux-patch1-etc  or ./cuda.......


----安装结束--拍照。



2.1 测试 cuda 样本

sudo apt-get install cmake 
这句不需要：  之前已经使用了g++ 5.0  sudo apt-get install g++


cd /usr/local/cuda

cd sample 
cd 1_Utilities
cd devicequery
sudo make
./devicequery

结果 显示 OK。

Cuda 安装成功完毕。


----另外：

如果需要卸载重装，运行下列命令卸载 cuda 

$ cd /usr/local/cuda/bin
$ sudo ./uninstall_cuda_9.2.pl
-------------------------------------------------------


4. step ---------  -----------  -----------  ----------  -----------

第一，安装cuDNN       https://developer.nvidia.com/rdp/cudnn-download  下载for cuda9.0


2.3.1. Installing from a Tar File
Navigate to your <cudnnpath> directory containing the cuDNN Tar file.
Unzip the cuDNN package.
$ tar -xzvf cudnn-9.0-linux-x64-v7.tgz
Copy the following files into the CUDA Toolkit directory, and change the file permissions.
$ sudo cp cuda/include/cudnn.h /usr/local/cuda/include
$ sudo cp cuda/lib64/libcudnn* /usr/local/cuda/lib64
$ sudo chmod a+r /usr/local/cuda/include/cudnn.h /usr/local/cuda/lib64/libcudnn*


Add:
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64

From :http://www.cs.virginia.edu/~mwb7w/cuda_support/libcudart.html


第二：

安装 以下3文件，和  cuDNN 是同一的下载页面。


Navigate to your <cudnnpath> directory containing cuDNN Debian file.
Install the runtime library, for example:
  sudo dpkg -i libcudnn7_7.0.3.11-1+cuda9.0_amd64.deb
  
Install the developer library, for example:
  sudo dpkg -i libcudnn7-dev_7.0.3.11-1+cuda9.0_amd64.deb
  
Install the code samples and the cuDNN Library User Guide, for example:
  sudo dpkg -i libcudnn7-doc_7.0.3.11-1+cuda9.0_amd64.deb



sudo systemctl set-default graphical.target
sudo reboot
此时 解析度变回正常。并且能搜索软件： nvidia x server settings 软件


第三：

插入 环境 变量：

export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/local/cuda/lib64"
export CUDA_HOME=/usr/local/cuda


------- --------
2.4. Verifying
To verify that cuDNN is installed and is running properly, compile the mnistCUDNN sample located in the /usr/src/cudnn_samples_v7 directory in the debian file.

Copy the cuDNN sample to a writable path.
  $cp -r /usr/src/cudnn_samples_v7/ $HOME
  
Go to the writable path.
  $ cd  $HOME/cudnn_samples_v7/mnistCUDNN
  
Compile the mnistCUDNN sample.  
  $make clean && make

Run the mnistCUDNN sample.
  $ ./mnistCUDNN
  
  
If cuDNN is properly installed and running on your Linux system, you will see a message similar to the following:
Test passed!








  
